version: "3.2"

services:
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  db:
    image: mysql:latest
    platform: linux/amd64
    volumes:
      - "./.data/db:/var/lib/mysql"
    restart: always
    networks: 
      - wp-net
    environment:
      MYSQL_ROOT_PASSWORD: wordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress:
    # depends_on:
    #   - db
    image: wordpress:latest
    platform: linux/amd64
    volumes:
      - "./template:/var/www/html/wp-content/themes/presspack"
      - "./build:/var/www/html/wp-content/themes/presspack/build"
      - "./wp-content/plugins:/var/www/html/wp-content/plugins"
      - "./wp-content/uploads:/var/www/html/wp-content/uploads"
      - "./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini"
    networks: 
      - wp-net
    restart: always
    ports: 
      - "9009:80"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress

  scrape:
    build:
      dockerfile: Dockerfile
      context: .
    # depends_on:
    #   - wordpress
    #   - db
    links:
      - wordpress
    image: scrape
    command: sh -c "sh ./run.sh"
    networks: 
      - wp-net
    ports:
      - "3000:3000"
    volumes:
      - "./:/home"
      - "./run.sh:/home/run.sh"
      
networks:
  wp-net:
    driver: bridge

  # node:
  #   depends_on:
  #     - wordpress
  #   image: node:12
  #   build:
  #     context: .
  #   command: sh -c "cd home/node/app && ./run.sh"
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - "./:/home/node/app"
  #     - "./node_modules:/home/node/app/node_modules"
